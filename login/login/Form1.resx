<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAB+RJREFUeF7t
        XU1sFVUUprSltPxEowuptRCoT03DihAlCstnQkLrphI2vhhIMNCCLFhpkZ8NCVoSRVaSoEgXJqIhtYvW
        yAKWNGkTKSVAKrY0stO1i+f5JvONZ26H8ua91/fmztwv+XLu3M7Mm3u+e+65976frrAJxWKxad++fT+g
        2NjYWIRtaGjw7MqVKz27atUqzzY3Nxf7+vp+nJuba5Vjh2phfn7+hc7OzsdNTU2eozXhdAgBUVBmPcVi
        Hc7ZtGnTk4WFhRfl2KFcbN++/XcxnlPZ89va2oKoAM0IAVtaWiLrwe7u7rsSaQ1SdigVphPhYFjTyYga
        HTm6jCjRUdPa2hqcwwgSOiwFGVb+grO1IHTe6tWrA2FYT4GihjMy6l4gr924ceMTsQ4aSNYwmhii2MPp
        PBDCsEyakQFCCFxnCow63Ftfg+gRNEvZ4datW2+J8RxDZ2sHgnQij3WkLEUKgzLugfxjnqN548aNd8Rm
        FxcvXvxIjOcMHQUge7B2KKwWhrMs/p3n6HpQl3EOj03BUB4aGsIzZQ/Xrl3rFRM4qp7UwkDM4eHh96Sc
        HTx8+LATTpBi3RmVkyAOnlHKmUHQcJbrSQxXegKhOksm4Amx1FS11qQAWhhaYXqBbRAxwTChGl03cpIA
        MViHDsPj2dnZl8SmFoEYSckhmrqDcDj1Izl9GB0dzesEiobqXlkv8hloI4as4vj4+Lti0wU2EA2PmtnU
        k4xWWkYHrf/s6cHAwMAFMV7jQLPhSScE6e/v/0rK6QC3OiBAkmZXpdDIdfYDuSMqV9gSHSRmYyMjI6nI
        JUHCZCLncRJnWiYxXBmdx3p4DdKzllJ3a5NENSu0G4wCNEiLoiMlyURnMhaPdgMi0PFoGAQCbRADZCdS
        kxHrEWqYpi0zLuYQ31qPUONsZiqGLMGihtlKJ0jC6ARJGJ0gCaMTJGF0giSMTpCEMRWCcFGlF4ass4XG
        AtZu3L59+3UxoYZREBs2GfGsfN6pqanXxNoPfhUA5EadDVvvmv7zpgNbtmz50x9/Q6Q4SSeec+vWrdNS
        Tgfu37/fIsb79DnD35YIYadJ3XcVC4XCFTFe4yhGVNQkkfv37/9ObPoAARAhtgihmE6cPXv2UzFeI20R
        5vz58x+LTTW8hnLYYk5JwptV6CBcL6l1U7oxPT39qpjACaB+mxQC4bhWSZ9rId0hWDcxMdElNv3o7+//
        UkzI6XCIPmbk1ILsBLru4MGD+LRldtDV1TUvJuQITjH55cxarOQZlSgzp+Vyucdis4c7d+50wQk6uevF
        Yi2ihK+H6MRzTE5O5uQ4u9iwYcMcI0ILsH79+qC83IQoEKOjoyObkWFiYGDgczGec9BTmWB15Cw3jx07
        NiTWgXjw4MErYjznQIhaJnV/5ucQhUuXLn0gJvSlHkYKrBk9pQinz9H38l/LoRQcOXLkCzGh9QEI55p1
        INcudDipxWCuOnr0KIZIh3Kwe/fucZ1XuFahjRIHopjC4Difz49J2aGauHr1au/evXt/lqLnaAqDSNBv
        hPX29v7k/3yHg4ODg4ODg4ODQ1KBrZTh4eH39+zZM5LL5f6RqmCaq3eESyHWIO3t7X/39fX9cvny5Q/9
        bRqHKMzOzj534MCBK+bCzyScav6tlG0TXIfzos5FHd+PKRQK3z569Oh5KWcTN2/efBPO0m9CaYdDIBzj
        HNaRqMff6eilaF4Loj7qvqwfHR19W46zAewjoVeaDoEwehtEiwNHmdERh7z+aQLpFT7O4XP4+2npAz65
        iEauW7dukaNZBiFSVM816/Uxy08jr3kW9U+Rs06/vbywsNAm1n7gc71m7za31rXjIJIWKko0ffws4rX1
        NebrsQ6Wz4nXNJ8ZE4mOjo4/pGwvxPH/igk1zDZSLEaLCIM22YV79+69LGZRL7OdOnJmZmbaxSYfHGLM
        YcFWoj1sk/7teDXsJhrBA6MRaRFFU7dLLVATiWBtgHLaiIjgcAWbdFH4UB4ZznraaCv1NBjUnwVm50va
        8BU89Nq1a/lgsfebkkx0rCgBECkRQ3P9sGPHjilziGJYmz3LVur26YhXURG0FcLs3LlzSsq1x5kzZwbF
        BA+VVTI6dEc8derUZ1KuHTZv3jwjJvRgjuFP62/btu2u2OXH5ORkN/JDxNiZSTKPoAzLMnw0MTHxhpSX
        F06ExYQIOr9QFD+3LDu8yDC3y7NMdlJYzi7VjHNZ4W1TOyH+J3yhEzrLoBKo+jh8+PAFMyzd8BVNvO/D
        YQs8dOjQ12KrjkAA9ALdExzDC2HtJwjj+6p6OH78+JApQBq2RWpBijM4OHhCbNUQ3BzJ3IkRj/CX77PK
        4X9fO7g5E7pL7KVR51nJJZX/lx4MVbgpLEXAuKiTluPTyTyihKkMFAE35E2dGPFIf/n+Kx/FYrERBtM4
        WNBFSXlE7oUg/o+5lYeTJ0+eUKEWTHVd/iid8Jn22+nTp/ETVWUjuGlUWYvluDT1OkVYHtyQVB2yE8Of
        leaR0I0d41PnXFUfH2NjYz1i9E0cKySHrevXr8f/unZPT8/3bsiqnGvWrAnK8CdW7IVC4Rs5jgdcqBO4
        Y/nksGXMTmPDzaKqQO770Zew/idW4kHNCBwrJH1ZaWI3b+BYBs1OrXwaGy6HVJmGP+NB/wq1Y2U0O/a5
        c+c+ERsf+Xz+NzGhmznGox6yMMvatWvXr1J2sAMrVvwH03PBScztbNcAAAAASUVORK5CYII=
</value>
  </data>
</root>